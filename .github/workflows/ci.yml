name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  NODE_VERSION: 18

jobs:
  # Code Quality Checks
  lint-and-test:
    name: 🔍 Code Quality
    runs-on: ubuntu-latest
    steps:
      - name: 📚 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci --legacy-peer-deps

      - name: 🔍 Lint code
        run: npm run lint

      - name: 🔧 Type check
        run: npm run typecheck

      - name: 🧪 Run tests (if available)
        run: npm test --passWithNoTests --ci --coverage --watchAll=false
        continue-on-error: true

  # Build and Deploy
  build-web:
    name: 🏗️ Build Web App
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
      - name: 📚 Checkout code
        uses: actions/checkout@v4

      - name: 📦 Setup Node.js  
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'

      - name: 📥 Install dependencies
        run: npm ci --legacy-peer-deps

      - name: 🌐 Export web build
        run: npm run build
        env:
          EXPO_PUBLIC_SUPABASE_URL: ${{ secrets.EXPO_PUBLIC_SUPABASE_URL }}
          EXPO_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.EXPO_PUBLIC_SUPABASE_ANON_KEY }}
          EXPO_PUBLIC_APP_VERSION: "1.0.0"

      - name: 📤 Upload web build
        uses: actions/upload-artifact@v4
        with:
          name: web-build
          path: build/
          retention-days: 7

  # Security Checks
  security-scan:
    name: 🔐 Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: 📚 Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Run security audit
        run: npm audit --audit-level moderate
        continue-on-error: true

      - name: 🔒 Check for secrets in code
        run: |
          echo "Checking for potential secrets..."
          ! grep -r "sk-" . --exclude-dir=node_modules --exclude-dir=.git || echo "⚠️  Found potential API keys"
          ! grep -r "eyJ" . --exclude-dir=node_modules --exclude-dir=.git --exclude="*.md" || echo "⚠️  Found potential JWT tokens"

  # Notify Netlify (if not using Git integration)  
  deploy-netlify:
    name: 🚀 Deploy to Netlify
    runs-on: ubuntu-latest
    needs: [lint-and-test, build-web]
    if: github.ref == 'refs/heads/main'
    steps:
      - name: 📚 Checkout code
        uses: actions/checkout@v4

      - name: 🚀 Trigger Netlify Deploy
        run: |
          curl -X POST -d '{}' '${{ secrets.NETLIFY_BUILD_HOOK }}'
        continue-on-error: true

      - name: 💬 Comment on PR
        uses: actions/github-script@v7
        if: github.event_name == 'pull_request'
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: '🚀 Web build artifact is available for download!'
            })